--flagfile
    (default: )
    comma-separated list of files to load flags from 

--column_limit
    (default: 100)
    Target line length limit to stay under when formatting.

--indentation_spaces
    (default: 2)
    Each indentation level adds this many spaces.

--line_break_penalty
    (default: 2)
    Penalty added to solution for each introduced line break. 

--over_column_limit_penalty
    (default: 100)
    For penalty minimization, this represents the baseline penalty 
    value of exceeding the column limit. Additional penalty of 1 is 
    incurred for each character over this limit 

--wrap_spaces
    (default: 4)
    Each wrap level adds this many spaces. This applies when the 
    first element after an open-group section is wrapped. Otherwise, 
    the indentation level is set to the column position of the 
    open-group operator. 

--assignment_statement_alignment
    (default: infer)
    Format various assignments: {align,flush-left,preserve,infer} 

--case_items_alignment
    (default: infer)
    Format case items: {align,flush-left,preserve,infer} 

--class_member_variable_alignment
    (default: infer)
    Format class member variables: {align,flush-left,preserve,infer} 

--compact_indexing_and_selections
    (default: true)
    Use compact binary expressions inside indexing / bit selection 
    operators 

--distribution_items_alignment
    (default: infer)
    Aligh distribution items: {align,flush-left,preserve,infer} 

--enum_assignment_statement_alignment
    (default: infer)
    Format assignments with enums: {align,flush-left,preserve,infer} 

--expand_coverpoints
    (default: false)
    If true, always expand coverpoints. 

--formal_parameters_alignment
    (default: infer)
    Format formal parameters: {align,flush-left,preserve,infer} 

--formal_parameters_indentation
    (default: wrap)
    Indent formal parameters: {indent,wrap}

--module_net_variable_alignment
    (default: infer)
    Format net/variable declarations: 
    {align,flush-left,preserve,infer} 

--named_parameter_alignment
    (default: infer)
    Format named actual parameters: 
    {align,flush-left,preserve,infer} 

--named_parameter_indentation
    (default: wrap)
    Indent named parameter assignments: {indent,wrap} 

--named_port_alignment
    (default: infer)
    Format named port connections: {align,flush-left,preserve,infer} 

--named_port_indentation
    (default: wrap)
    Indent named port connections: {indent,wrap}

--port_declarations_alignment
    (default: infer)
    Format port declarations: {align,flush-left,preserve,infer} 

--port_declarations_indentation
    (default: wrap)
    Indent port declarations: {indent,wrap}

--port_declarations_right_align_packed_dimensions
    (default: false)
    If true, packed dimensions in contexts with enabled alignment 
    are aligned to the right.

--port_declarations_right_align_unpacked_dimensions
    (default: false)
    If true, unpacked dimensions in contexts with enabled alignment 
    are aligned to the right.

--struct_union_members_alignment
    (default: infer)
    Format struct/union members: {align,flush-left,preserve,infer} 

--try_wrap_long_lines
    (default: false)
    If true, let the formatter attempt to optimize line wrapping 
    decisions where wrapping is needed, else leave them 
    unformatted. This is a short-term measure to reduce 
    risk-of-harm. 

--wrap_end_else_clauses
    (default: false)
    Split end and else keywords into separate lines

--verilog_trace_parser
    (default: false)
    Trace verilog parser 

--failsafe_success
    (default: true)
    If true, always exit with 0 status, even if there were input 
    errors or internal errors. In all error conditions, the original 
    text is always preserved. This is useful in deploying services 
    where fail-safe behaviors should be considered a success. 

--inplace
    (default: false)
    If true, overwrite the input file on successful conditions.

--lines
    (default: )
    Specific lines to format, 1-based, comma-separated, inclusive 
    N-M ranges, N is short for N-N. By default, left unspecified, 
    all lines are enabled for formatting. repeatable, cumulative) 

--max_search_states
    (default: 100000)
    Limits the number of search states explored during line wrap 
    optimization. 

--show_equally_optimal_wrappings
    (default: false)
    If true, print when multiple optimal solutions are found 
    stderr), but continue to operate normally.

--show_inter_token_info
    (default: false)
    If true, along with show_token_partition_tree, include 
    inter-token information such as spacing and break penalties.

--show_largest_token_partitions
    (default: 0)
    If > 0, print token partitioning and then exit without 
    formatting output. 

--show_token_partition_tree
    (default: false)
    If true, print diagnostics after token partitioning and then 
    exit without formatting output. 

--stdin_name
    (default: "<stdin>")
    When using '-' to read from stdin, this gives an alternate name 
    for diagnostic purposes. Otherwise this is ignored. 

--verbose
    (default: false)
    Be more verbose. 

--verify
    (default: false)
    If true, only checks if formatting would be done. Return code 0 
    means no files would change. Return code 1 means some files 
    would be reformatted. 

--lines
    (default: true)
    verify that re-formatting the formatted output yields no further 
    changes, i.e. formatting is convergent.
